{\rtf1\ansi\ansicpg1252\deff0\uc1
{\fonttbl
{\f0\fnil\fcharset0\fprq0\fttruetype Liberation Serif;}
{\f1\fnil\fcharset0\fprq0\fttruetype Arial;}
{\f2\fnil\fcharset0\fprq0\fttruetype Liberation Sans;}
{\f3\fnil\fcharset0\fprq0\fttruetype Courier New;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;
\red255\green255\blue255;}
{\stylesheet
{\s21\sb240\sa117\f2\fs28\sbasedon32\snext41 Heading;}
{\s7\fi-428\li720\sbasedon32\snext32 Contents 1;}
{\s8\fi-428\li1440\sbasedon32\snext32 Contents 2;}
{\s1\fi-428\li720 Arrowhead List;}
{\s10\fi-428\li2880\sbasedon32\snext32 Contents 4;}
{\s33\tx431\sbasedon22\snext32 Numbered Heading 1;}
{\s9\fi-428\li2160\sbasedon32\snext32 Contents 3;}
{\s13\fi-428\li720 Diamond List;}
{\s16\sbasedon32 Endnote Text;}
{\s4\fi-428\li720 Bullet List;}
{\s31\fi-428\li720\sbasedon32 Lower Roman List;}
{\s35\tx431\sbasedon24\snext32 Numbered Heading 3;}
{\s36\fi-428\li720 Numbered List;}
{\*\cs15\fs20\super Endnote Reference;}
{\s34\tx431\sbasedon23\snext32 Numbered Heading 2;}
{\s6\tx1584\sbasedon33\snext32 Chapter Heading;}
{\s39\fi-428\li720 Square List;}
{\s12\fi-428\li720 Dashed List;}
{\s24\sb440\sa60\f1\fs24\b\sbasedon32\snext32 Heading 3;}
{\s42\fi-428\li720 Tick List;}
{\s26\fi-428\li720 Heart List;}
{\s45\fi-428\li720\sbasedon36 Upper Roman List;}
{\s2\li1440\ri1440\sa117\sbasedon32 Block Text;}
{\s43\fi-428\li720 Triangle List;}
{\s44\fi-428\li720\sbasedon36 Upper Case List;}
{\s17\fi-288\li288\fs20\sbasedon32 Footnote;}
{\s20\fi-428\li720 Hand List;}
{\s19\fs20\sbasedon32 Footnote Text;}
{\s22\sb440\sa60\f1\fs34\b\sbasedon32\snext32 Heading 1;}
{\s23\sb440\sa60\f1\fs28\b\sbasedon32\snext32 Heading 2;}
{\s11\qc\sb240\sa117\f1\fs32\b\sbasedon32\snext32 Contents Header;}
{\s25\sb440\sa60\f1\fs24\b\sbasedon32\snext32 Heading 4;}
{\s32\f0\fs24\lang1033 Normal;}
{\s30\fi-428\li720\sbasedon36 Lower Case List;}
{\s5\sb117\sa117\fs24\i\sbasedon32 Caption;}
{\s41\sl288\slmult1\sa136\sbasedon32 Text Body;}
{\s29\sl288\slmult1\sa136\sbasedon41 List;}
{\s37\f3\sbasedon32 Plain Text;}
{\s28\sbasedon32 Index;}
{\s27\fi-428\li720 Implies List;}
{\s3\fi-428\li720 Box List;}
{\s40\fi-428\li720 Star List;}
{\*\cs18\fs20\super Footnote Reference;}
{\s38\tx1584\sbasedon33\snext32 Section Heading;}
{\s14\fi-288\li288\sbasedon32 Endnote;}}
\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnrlc\ftnstart1\aftnstart1\aenddoc\revprop3{\*\rdf}{\info\uc1}\deftab720\viewkind1\paperw12240\paperh15840\margl1440\margr1440\widowctrl
\sectd\sbknone\colsx0\margtsxn1134\margbsxn1134\marglsxn1134\margrsxn1134\pgncont\ltrsect
\pard\plain\ltrpar\qc\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Chapter 6}{\s32\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qc\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Vocab}{\s32\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Methods}{\s32\f0\fs24\lang1033{\*\listtag0} - Also function or procedure or subroutine , allow programmer to modularize a program by separating it\uc1\u8217\'92s task into self contained units.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Programmer Declared Methods}{\s32\f0\fs24\lang1033{\*\listtag0} - Methods that the programmer has created for their program, rather than a built in method like Math.sqrt.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Built-in Methods}{\s32\f0\fs24\lang1033{\*\listtag0} - These methods are hidden from other methods and are only written once - we call this }{\s32\f0\fs24\i\lang1033{\*\listtag0}information hiding. }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Software Reusability}{\s32\f0\fs24\lang1033{\*\listtag0} - idea that once you have created a piece of data you should not have to to create it again.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Invoke / Call}{\s32\f0\fs24\lang1033{\*\listtag0} - Making a function perform it\uc1\u8217\'92s given task. In the code, when you invoke or call a method, you are going to that piece of self contained code.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Parameters}{\s32\f0\fs24\lang1033{\*\listtag0} - Variables in the declaration of the method. }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Arguments}{\s32\f0\fs24\lang1033{\*\listtag0} - Actual values / variables / expressions being sent through the call of the method.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Calling Method}{\s32\f0\fs24\lang1033{\*\listtag0} - The method call within another method, including main().}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Return}{\s32\f0\fs24\lang1033{\*\listtag0} - The result being sent back t the location of the calling method.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Method Header}{\s32\f0\fs24\lang1033{\*\listtag0} - First line of the method declaration.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Method Body}{\s32\f0\fs24\lang1033{\*\listtag0} - Declarations and statements inside the braces of the method form the method\uc1\u8217\'92s body, which is a block.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab - Variables can be declared in any block and blocks can be nested. }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab - A method cannot be declared in another method.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab - Forgetting to return a value from a non-void method is a syntax error, as is trying to return a value from a void() function. \tab }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab - Remember functions only return ONE value.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Built-in Methods}{\s32\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}abs}{\s32\f0\fs24\lang1033{\*\listtag0} - Absolute Value.}{\s32\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}ceil}{\s32\f0\fs24\lang1033{\*\listtag0} - Always rounds up.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}cos / sin / tan}{\s32\f0\fs24\lang1033{\*\listtag0} - Trigonometric Functions}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}floor}{\s32\f0\fs24\lang1033{\*\listtag0} - Floor}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Log}{\s32\f0\fs24\lang1033{\*\listtag0} - Logarithm }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Max}{\s32\f0\fs24\lang1033{\*\listtag0} - Maximum}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}Min}{\s32\f0\fs24\lang1033{\*\listtag0} - Minimum}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}pow}{\s32\f0\fs24\lang1033{\*\listtag0} -'Power\uc1\u8217\'92 lets you calculate roots}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\ul\lang1033{\*\listtag0}sqrt}{\s32\f0\fs24\lang1033{\*\listtag0} - Square Root short cut.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Calling a Method}{\s32\f0\fs24\b\lang1033{\*\listtag0}\tab }{\s32\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\lang1033{\*\listtag0}1. Method name}{\s32\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab 2. Reference object}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab 3. A valid method name from a class.}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Random Numbers}{\s32\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab - Math.random() - Generates a random number from 0.0 to (but not including) 1.0 (0.0,  1.0) }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab - (int)(Math.random() * range + lower bounds)}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \tab Range = highest - lowest + 1}{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Promotion}{\s32\f0\fs24\lang1033{\*\listtag0}\tab }{\s32\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab - Argument promotion forces an argument to be passed into a method as the appropriate variable type. Some methods can take, say, an integer but not a double because it is bigger. }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab - INT - > LONG -> DOUBLE  }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s32\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi-720\li720\s32\sl240\slmult1\itap0{\s32\f0\fs24\lang1033{\*\listtag0}\par}}